# set the working directoyy
setwd()
getwd()
# installs required
install.packages('tidyverse')
library(tidyverse)
if (!require("gplots")) {
  install.packages("gplots", dependencies = TRUE)
  library(gplots)
}
if (!require("RColorBrewer")) {
  install.packages("RColorBrewer", dependencies = TRUE)
  library(RColorBrewer)
}
library(gplots)
library(RColorBrewer)

if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("pcaMethods")
library(pcaMethods)

library('VennDiagram')

library(tximport)
library(tidyverse)
library(GenomicFeatures)
library(DelayedArray) 
library(DESeq2)
library(magrittr)

#load annotation file
library(readr)
annotation <- read_csv("annotation.csv")
View(annotation)
str(annotation)
# select the columns that we need now


# read the tables of fold changes and p-values

dex_total <- read_csv('results_control_DEXcomparison_total.csv')
dex_total <- rename(dex_total, 'gene_ID' = X1)
dex_80S <-  read_csv('results_control_DEXcomparison_outlier_80S.csv')
dex_80S <- rename(dex_80S, 'gene_ID' = X1)
dex_poly <- read_csv('results_control_DEXcomparison_poly.csv')
dex_poly <- rename(dex_poly, 'gene_ID' = X1)


# we check which genes are in common (inner_join) and get the number (dim)
dim(inner_join(dex_total, dex_80S, by = "gene_ID")) # 13258 common
dim(inner_join(dex_total, dex_poly, by = "gene_ID")) # 14358 common
dim(inner_join(dex_80S, dex_poly, by = "gene_ID")) # 12758 common

# PCA
pca(dex_total)

# select genes that are statistically significant FDR<0.1
dex_total_p <- dex_total %>% 
  dplyr::filter(padj <0.1) %>% 
  dplyr::select(gene_ID)

dex_80S_p <- dex_80S %>% 
  filter(padj <0.1)%>% 
  dplyr::select(gene_ID)

dex_poly_p <- dex_poly %>% 
  filter(padj<0.1)%>% 
  dplyr::select(gene_ID)

# draw a Venn

input <- list(dex_80S_p,dex_poly_p,dex_total_p)
tmp <- venn(input)
venn(input)
str(tmp)
attr(tmp, 'intersections')

#join annotation file to ensembl id for signifcant DEGs

dex_total_p <- inner_join(annotation, dex_total_p, by = 'gene_ID')
dex_80S_p <- inner_join(annotation, dex_80S_p, by = 'gene_ID')
dex_poly_p <- inner_join(annotation, dex_poly_p, by = 'gene_ID')


# join: get FC levels from 80S and poly that change in total
total_80S <- semi_join(dex_80S, dex_total_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_80S = log2FoldChange) 

# 121 out of 125: ENSG00000006210, ENSG00000109906, ENSG00000166106 and ENSG00000173269 missing in 80S
  filter(!is.na(FC_80S))

total_poly <- semi_join(dex_poly,dex_total_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_poly = log2FoldChange)

total <- dex_total %>% 
  dplyr::filter(padj <0.1) %>% 
  dplyr::select(gene_ID,log2FoldChange ) %>% 
  dplyr::rename(FC_total = log2FoldChange)

# now join all datasets
total_80_S <- full_join(total, total_80S)
all_genes_total <- full_join(total_80_S, total_poly) 

  filter(!is.na(FC_80S)) # removing the 4 genes not present in 80S - not doing this

head(all_genes_total)
summary(all_genes_total)


# join: get FC levels from total and poly that change in 80S
mono_total <- semi_join(dex_total, dex_80S_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_total = log2FoldChange)# 75 of 83

mono_poly <- semi_join(dex_poly,dex_80S_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_poly = log2FoldChange) # 76 of 83

mono <- dex_80S%>% 
  dplyr::filter(padj <0.1) %>% 
  dplyr::select(gene_ID,log2FoldChange ) %>% 
  dplyr::rename(FC_80S = log2FoldChange)

# now join all datasets
mono_total_join <- full_join(mono, mono_total)
all_genes_80S <- full_join(mono_total_join, mono_poly) 

summary(all_genes_80S) # there are 8 missing genes in total and 7 in poly

#not removing NAs anymore but if needed here is the code
all_genes_80S <- full_join(mono_total_join, mono_poly) %>% 
  filter(!is.na(FC_total),
         !is.na(FC_poly)) # removing the genes not present in 80S

#join: get FC levels from total and 80S that change in poly
poly_total <- semi_join(dex_total, dex_poly_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_total = log2FoldChange)# 16 of 16
poly_mono <- semi_join(dex_80S,dex_poly_p) %>% 
  dplyr::select(gene_ID, log2FoldChange) %>% 
  dplyr::rename(FC_mono = log2FoldChange) # 14 of 16 (missing: ENSG00000111249, 	ENSG00000187957)
poly <- dex_poly%>% 
  dplyr::filter(padj <0.1) %>% 
  dplyr::select(gene_ID,log2FoldChange ) %>% 
  dplyr::rename(FC_poly = log2FoldChange)

#now join all datasets
poly_total_join <- full_join(poly, poly_total)
all_genes_poly <- full_join(poly_total_join, poly_mono) 

summary(all_genes_poly) #there are 2 missing in 80S

#if you want to remove NAs (we dont)
all_genes_poly <- full_join(poly_total_join, poly_mono) %>% 
  filter(!is.na(FC_total),
         !is.na(FC_mono)) # removing the 2 genes not present in 80S

#change ensembl ID for gene ID
all_genes_total <- inner_join(annotation, all_genes_total, by = 'gene_ID')
summary(all_genes_total) 

all_genes_80S <- inner_join(annotation, all_genes_80S, by = 'gene_ID')
summary(all_genes_80S)

all_genes_poly <- inner_join(annotation, all_genes_poly, by = 'gene_ID')
summary(all_genes_poly)

#get ensemble ID for NA genes
total_NA <- all_genes_total %>% 
  dplyr::filter(is.na (gene_name)) %>% 
  dplyr::select(-gene_name) %>% 
  dplyr::rename(gene_name = 'gene_ID')

mono_NA <- all_genes_80S %>% 
  dplyr::filter(is.na (gene_name)) %>% 
  dplyr::select(-gene_name) %>% 
  dplyr::rename(gene_name = 'gene_ID')

poly_NA <- all_genes_poly %>% 
  dplyr::filter(is.na (gene_name)) %>% 
  dplyr::select(-gene_name) %>% 
  dplyr::rename(gene_name = 'gene_ID')

#join ensemble ID NAs with gene names and remove NAs from gene name
all_genes_total <- full_join(total_NA, all_genes_total) %>% 
  dplyr::filter(!is.na(gene_name))
head(all_genes_total)

all_genes_80S <- full_join(mono_NA, all_genes_80S) %>% 
  dplyr::filter(!is.na(gene_name))
head(all_genes_80S)

all_genes_poly <- full_join(poly_NA, all_genes_poly) %>% 
  dplyr::filter(!is.na(gene_name))
head(all_genes_poly)

#removing 5th column (which is empty gene list)
all_genes_total <- all_genes_total[, -5]
all_genes_80S <- all_genes_80S[, -5]
all_genes_poly <- all_genes_poly[, -5]

write_csv(all_genes_total, file = 'csv/all_genes_total.csv')
write_csv(all_genes_80S, file = 'csv/all_genes_80S.csv')
write_csv(all_genes_poly, file = 'csv/all_genes_poly.csv')

# make it into a matrix to draw heatmap

all_genes_total <- as.data.frame(all_genes_total) # otherwise the rownames do not show in the heatmap
row.names(all_genes_total) <- all_genes_total$gene_name # assign labels in column gene_ID as rownames
all_genes_total$gene_name <-  NULL  # enables making a matrix in the next step with only numerical values
expmatrix_total <- as.matrix(all_genes_total)  

summary(expmatrix_total)

all_genes_80S <- as.data.frame(all_genes_80S) # otherwise the rownames do not show in the heatmap
row.names(all_genes_80S) <- all_genes_80S$gene_name # assign labels in column gene_ID as rownames
all_genes_80S$gene_name <-  NULL  # enables making a matrix in the next step with only numerical values
expmatrix_80S <- as.matrix(all_genes_80S)  
summary(expmatrix_80S)

all_genes_poly <- as.data.frame(all_genes_poly) # otherwise the rownames do not show in the heatmap
row.names(all_genes_poly) <- all_genes_poly$gene_name # assign labels in column gene_ID as rownames
all_genes_poly$gene_name <-  NULL  # enables making a matrix in the next step with only numerical values
expmatrix_poly <- as.matrix(all_genes_poly)  
summary(expmatrix_poly)
#clustering pearson

hc <- hclust(as.dist(1-cor(expmatrix_total, method="pearson")), method = "complete")
hr <- hclust(as.dist(1-cor(t(expmatrix_total), method="pearson")), method="complete")
plot(hc)
plot(hr)

hc2 <- hclust(as.dist(1-cor(expmatrix_80S, method="pearson")), method = "complete")
hr2 <- hclust(as.dist(1-cor(t(expmatrix_80S), method="pearson")), method="complete")
plot(hc2)

hc3 <- hclust(as.dist(1-cor(expmatrix_poly, method="pearson")), method = "complete")
hr3 <- hclust(as.dist(1-cor(t(expmatrix_poly), method="pearson")), method="complete")
plot(hc3)

#trying new color packs
install.packages("viridis")
library(viridis)

# creates a own color palette from red to green
my_palette <- colorRampPalette(c("green", "white", "magenta"))(n = 999)
my_palette <- colorRampPalette(bluered(n=999))
my_palette <- colorRampPalette(plasma(n=999))
my_palette <- colorRampPalette(viridis(n=999))
colors <- c(seq(-2.5,-0.11,length=450),seq(-0.1,0.1,length=100),seq(0.11,2.5,length=450))

# creates a 5 x 5 inch image
png("heatmap_total_DEX.png",    # create PNG for the heat map        
    width = 5*300,        # 5 x 300 pixels
    height = 5*300,
    res = 300,            # 300 pixels per inch
    pointsize = 8)        # smaller font size

#USE FIRST LINE FOR HEATMAP WITH COLOR BREAKS
heatmap.2(expmatrix_total,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", na.color="black", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs Total", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_total,Colv= as.dendrogram(hc),Rowv= as.dendrogram(hr),  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, breaks=colors, main="DEGs Total", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_total,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs Total", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_total,Colv= NULL,Rowv= as.dendrogram(hr),  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs Total", ylab="Differentially Expressed Genes")

dev.off()               # close the PNG device

#MAKE A SEPARATE COLOR OBJECT FOR EACH HEATMAP
colors1 <- c(seq(-4.5,-0.5,length=450),seq(-0.49,0.2,length=100),seq(0.21,3,length=450))

#creates a 5 x 5 inch image
png("heatmap_80S_DEX.png",    # create PNG for the heat map        
    width = 5*300,        # 5 x 300 pixels
    height = 5*300,
    res = 300,            # 300 pixels per inch
    pointsize = 8)        # smaller font size

heatmap.2(expmatrix_80S,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", na.color="black", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs 80S", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_80S,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, breaks=colors, main="DEGs 80S", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_80S,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs 80S", ylab="Differentially Expressed Genes")

dev.off()               # close the PNG device

#make a separate colors object for each heatmap
colors2 <- c(seq(-3,-0.2,length=450),seq(-0.19,0.19,length=100),seq(0.2,3,length=450))

# creates a 5 x 5 inch image
png("heatmap_poly_DEX.png",    # create PNG for the heat map        
    width = 5*300,        # 5 x 300 pixels
    height = 5*300,
    res = 300,            # 300 pixels per inch
    pointsize = 8)        # smaller font size

heatmap.2(expmatrix_poly,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", na.color="black", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs Poly", ylab="Differentially Expressed Genes")
heatmap.2(expmatrix_poly,Colv= NULL,Rowv= NULL,  col= my_palette, trace="none", scale="none", margin=c(8, 10), cexRow=0.4, cexCol=0.9, main="DEGs Poly", ylab="Differentially Expressed Genes")

dev.off()               # close the PNG device

